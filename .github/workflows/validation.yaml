#
# This workflow runs all the time.
# Checks if our repository can be build (both Docker and ROS stack)
# and then runs some simulations to functionally validate our stack
#

name: ugr-validation-workflow
on:
  push:
  workflow_dispatch:
jobs:
  build:
    runs-on: self-hosted
    steps:
      - name: Setup repo
        uses: actions/checkout@v4
        with:
          submodules: true
          token: ${{ secrets.CI_TOKEN }}
      - name: Build Docker image (nogpu)
        run: ./run build-nogpu
      - name: Build stack
        run: ./run build-stack
  simulate-skidpad:
    runs-on: self-hosted
    needs: [build]
    steps:
      - name: Run Skidpad simulation and supervise
        run: |
          ./run stop
          ./run set-car simulation
          ./run set-random-roscore-port
          ./run start-headless
          ./run simulation skidpad skidpad
          docker exec dev /bin/zsh -c "source ~/.zshrc && rosrun monitor state_supervisor.py _name:=skidpad _timeout:=60 _record_rosbag:=true"
          ./run stop
      - name: Upload rosbag
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: failed-skidpad-rosbag
          path: ROS/src/common/monitor/skidpad.bag
          retention-days: 1

  simulate-acceleration:
    runs-on: self-hosted
    needs: [build]
    steps:
      - name: Run Acceleration simulation and supervise
        run: |
          ./run stop
          ./run set-car simulation
          ./run set-random-roscore-port
          ./run start-headless
          ./run simulation acceleration acceleration
          docker exec dev /bin/zsh -c "source ~/.zshrc && rosrun monitor state_supervisor.py _name:=acceleration _timeout:=30 _record_rosbag:=true"
          ./run stop
      - name: Upload rosbag
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: failed-acceleration-rosbag
          path: ROS/src/common/monitor/acceleration.bag
          retention-days: 1
  simulate-trackdrive:
    runs-on: self-hosted
    needs: [build]
    steps:
      - name: Run Trackdrive simulation and supervise
        run: |
          ./run stop
          ./run set-car simulation
          ./run set-random-roscore-port
          ./run start-headless
          ./run simulation trackdrive chicane
          docker exec dev /bin/zsh -c "source ~/.zshrc && rosrun monitor state_supervisor.py _name:=trackdrive _timeout:=180 _record_rosbag:=true"
          ./run stop
      - name: Upload rosbag
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: failed-trackdrive-rosbag
          path: ROS/src/common/monitor/trackdrive.bag
          retention-days: 1
