<launch>
  <arg name="enable_sensors" default="true" />
  <arg name="enable_can" default="true" />
  <arg name="enable_drive" default="true" />

  <param name="robot_description"
    command="$(find xacro)/xacro '$(find orion_description)/urdf/orion.urdf'" />

  <group ns="ugr/car">
    <node pkg="robot_state_publisher" type="robot_state_publisher" name="publisher">
      <param name="use_tf_static" value="false" />
    </node>
  </group>

  <group if="$(arg enable_can)">
    <node pkg="can_node" type="can_driver.py" name="can_driver" output="screen">

      <param name="can_interface" value="can3_ext" />

      <remap from="/input/can" to="/ugr/car/can/tx" />
      <remap from="/output/can" to="/ugr/car/can/rx" />
    </node>
  </group>

  <group if="$(arg enable_sensors)">

    <!-- Vectornav -->
    <include file="$(find vectornav)/launch/vectornav.launch"/>

    <!-- Lidar -->
    <include file="$(find ouster_ros)/launch/sensor.launch">
      <arg name="timestamp_mode" default="TIME_FROM_PTP_1588" />
    </include>

    <!-- Camera -->
    <include file="$(find camera)/launch/publisher.launch" pass_all_args="true">
      <arg name="type" default="camera" />
    </include>

    <!-- GPS -->
    <include file="$(find ublox_gps)/launch/gps.launch" pass_all_args="true" />

    <!-- CAN-enabled sensors -->

    <node pkg="can_node" type="can_converter.py" name="can_converter" output="screen">
      <param name="res_send_interval" value="0.1" />

      <remap from="/input/can" to="/ugr/car/can/rx" />
      <remap from="/output/can" to="/ugr/car/can/tx" />

      <!-- Encoder 0: right -->
      <!-- Encoder 1: left -->
      <remap from="/output/vel0" to="/ugr/car/sensors/encoder0" />
      <remap from="/output/vel1" to="/ugr/car/sensors/encoder1" />

    </node>
  </group>

  <group if="$(arg enable_drive)">
    <include file="$(find ugr_ros_control)/orion_control/launch/orion_hardware.launch" />
  </group>

</launch>
