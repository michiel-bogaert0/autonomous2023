<launch>

    <group>
        <node pkg="tf2_ros" type="static_transform_publisher" name="ugr_axis0" args="-0.36 0.34 0 0 0 0 1 ugr/car_base_link ugr/car_base_link/axis0" />
        <node pkg="tf2_ros" type="static_transform_publisher" name="ugr_axis1" args="-0.36 -0.34 0 0 0 0 1 ugr/car_base_link ugr/car_base_link/axis1" />

        <node pkg="tf2_ros" type="static_transform_publisher" name="ugr_lidar0" args="0.0 0 0.37 0 0 0 1 ugr/car_base_link ugr/car_base_link/lidar0" />
        <node pkg="tf2_ros" type="static_transform_publisher" name="ugr_ouster_sensor" args="0 0 0 0 0 0 1 ugr/car_base_link/lidar0 os_sensor" />
        <node pkg="tf2_ros" type="static_transform_publisher" name="ugr_ouster_imu" args="0 0 0 0 0 0 1 os_sensor os_imu" />
        <node pkg="tf2_ros" type="static_transform_publisher" name="ugr_ouster_lidar" args="0 0 0 0 0 1 0 os_sensor os_lidar" />

        <node pkg="tf2_ros" type="static_transform_publisher" name="ugr_cam0" args="0.06 0 0.74 0 0 0 1 ugr/car_base_link ugr/car_base_link/cam0" />

        <!-- TODO plaatsing IMU's en GPS bekijken -->
        <node pkg="tf2_ros" type="static_transform_publisher" name="ugr_gps0" args="0 0 0 0 0 0 1 ugr/car_base_link ugr/car_base_link/gps0" />
        <node pkg="tf2_ros" type="static_transform_publisher" name="ugr_imu0" args="0 0 0 0 0 0 1 ugr/car_base_link ugr/car_base_link/imu0" />
        <node pkg="tf2_ros" type="static_transform_publisher" name="ugr_imu1" args="0 0 0 0 0 0 1 ugr/car_base_link ugr/car_base_link/imu1" />
    </group>

    <!-- Sensor capture files -->
    <include file="$(find ouster_ros)/ouster.launch"/>

    <node pkg="can_node" type="can_converter.py" name="can_converter" output="screen">
        <param name="interface" value="can0" />
        <param name="baudrate" value="250000" />
        <param name="odrive_dbc" value="$(find can_node)/odrive.dbc" />

        <remap from="/output/can" to="/can_messages" />
        <remap from="/output/vel0" to="/ugr/car/sensors/encoder0" />
        <remap from="/output/vel1" to="/ugr/car/sensors/encoder1" />
    </node>

    <include file="$(find pepwave_gps)/launch/gps.launch" />
    <!-- 
    <node pkg="perception" type="run.py" name="perception" output="screen">
        <param name="cuda" value="True" />
        <param name="tensorrt" value="False"/>
        <param name="detection_height_threshold" value="30" />
        <param name="rate" value="5" />
    </node> -->



</launch>